.. _solver_settings :

Solver settings
---------------

The solver settings are displayed in the following table. The settings marked with * can be changed without running the setup method again.

.. tabularcolumns:: |p{4.5cm}|p{3.5cm}|p{6.5cm}|L|

+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| Argument                        | Description                                                 | Allowed values                                                       | Default value                                                                        |
+=================================+=============================================================+======================================================================+======================================================================================+
| :code:`device`                  | Device identifier                                           | 0 <= :code:`device` (integer)                                        | 0                                                                                    |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`osqp_linsys_solver_type` | Linear systems solver to use                                | See :ref:`linear_system_solvers_setting`                             | :code:`OSQP_DIRECT_SOLVER` for builtin and MKL, :code:`OSQP_DIRECT_SOLVER` for CUDA, |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`allocate_solution`       | Allocate solution in OSQPSolver during :code:`osqp_setup`   | True/False                                                           | True                                                                                 |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`verbose` *               | Print output                                                | True/False                                                           | True                                                                                 |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`profiler_level`          | Level of detail for profiler annotations                    | True/False                                                           | False                                                                                |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`warm_starting` *         | Perform warm starting                                       | True/False                                                           | True                                                                                 |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`scaling`                 | Number of scaling iterations                                | 0 (disabled) or 0 < :code:`scaling` (integer)                        | 10                                                                                   |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`polishing` *             | Perform polishing                                           | True/False                                                           | False                                                                                |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`rho` *                   | ADMM rho step                                               | 0 < :code:`rho`                                                      | 0.1                                                                                  |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`rho_is_vec`              | Is :code:`rho` a vector?                                    | True/False                                                           | True                                                                                 |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`sigma`                   | ADMM sigma step                                             | 0 < :code:`sigma`                                                    | 1e-06                                                                                |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`alpha` *                 | ADMM relaxation parameter                                   | 0 < :code:`alpha` < 2                                                | 1.6                                                                                  |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`cg_max_iter` *           | Maximum number of CG iterations per solver                  | 0 < :code:`cg_max_iter` (integer)                                    | 20                                                                                   |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`cg_tol_reduction` *      | No. of consecutive CG iterations before the tol is halved   | 0 < :code:`cg_tol_reduction` (integer)                               | 10                                                                                   |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`cg_tol_fraction` *       | CG tolerance (fraction of ADMM residuals)                   | 0 < :code:`cg_tol_fraction` < 1                                      | 0.15                                                                                 |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`cg_precond`              | Preconditioner to use in the CG method                      | :code:`OSQP_NO_PRECONDITIONER`, :code:`OSQP_DIAGONAL_PRECONDITIONER` | :code:`OSQP_DIAGONAL_PRECONDITIONER`                                                 |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`adaptive_rho`            | Adaptive rho                                                | True/False                                                           | True                                                                                 |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`adaptive_rho_interval`   | Adaptive rho interval                                       | 0 (automatic) or 0 < :code:`adaptive_rho_interval` (integer)         | 0                                                                                    |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`adaptive_rho_fraction`   | Adaptive rho interval as fraction of setup time (auto mode) | 0 < :code:`adaptive_rho_fraction`                                    | 0.4                                                                                  |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`adaptive_rho_tolerance`  | Tolerance for adapting rho                                  | 1 <= :code:`adaptive_rho_tolerance`                                  | 5                                                                                    |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`max_iter` *              | Maximum number of iterations                                | 0 < :code:`max_iter` (integer)                                       | 4000                                                                                 |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`eps_abs` *               | Absolute tolerance                                          | 0 <= :code:`eps_abs`                                                 | 1e-03                                                                                |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`eps_rel` *               | Relative tolerance                                          | 0 <= :code:`eps_rel`                                                 | 1e-03                                                                                |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`eps_prim_inf` *          | Primal infeasibility tolerance                              | 0 <= :code:`eps_prim_inf`                                            | 1e-04                                                                                |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`eps_dual_inf` *          | Dual infeasibility tolerance                                | 0 <= :code:`eps_dual_inf`                                            | 1e-04                                                                                |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`scaled_termination` *    | Scaled termination conditions                               | True/False                                                           | False                                                                                |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`check_termination` *     | Check termination interval                                  | 0 (disabled) or 0 < :code:`check_termination` (integer)              | 25                                                                                   |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`time_limit` *            | Runtime limit in seconds                                    | 0 < :code:`time_limit`                                               | 1e+10                                                                                |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`delta` *                 | Polishing regularization parameter                          | 0 < :code:`delta`                                                    | 1e-06                                                                                |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+
| :code:`polish_refine_iter` *    | Refinement iterations in polishing                          | 0 < :code:`polish_refine_iter` (integer)                             | 3                                                                                    |
+---------------------------------+-------------------------------------------------------------+----------------------------------------------------------------------+--------------------------------------------------------------------------------------+

The boolean values :code:`True/False` are defined as :code:`1/0` in the C interface.


The infinity values correspond to:

.. tabularcolumns:: |p{4.5cm}|p{3.5cm}|p{6.5cm}|L|

+----------+--------------------+
| Language | Value              |
+==========+====================+
| C        | :code:`OSQP_INFTY` |
+----------+--------------------+
| Python   | :code:`numpy.inf`  |
+----------+--------------------+
| Matlab   | :code:`Inf`        |
+----------+--------------------+
| Julia    | :code:`Inf`        |
+----------+--------------------+
