import{_ as a,l as i,I as s,d as p,K as n}from"./mermaid-0ClPHFIM.js";import{p as m}from"./treemap-75Q7IDZK-mGt3Vxl-.js";import"./index-BB71mG_d.js";import"./transform-B8bpuzxV.js";import"./timer-BwIYMJWC.js";import"./step-BwsUM5iJ.js";import"./_baseEach-2yxz4QPK.js";import"./_baseUniq-kkBJp3jc.js";import"./min-CO20nzic.js";import"./_baseMap-Uhjhm4ni.js";import"./clone-D8_RSzqX.js";import"./_createAggregator-ByV0zOLy.js";var d={parse:a(async r=>{const t=await m("info",r);i.debug(t)},"parse")},g={version:n.version+""},v={parser:d,db:{getVersion:a(()=>g.version,"getVersion")},renderer:{draw:a((r,t,o)=>{i.debug(`rendering info diagram
`+r);const e=s(t);p(e,100,400,!0),e.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${o}`)},"draw")}};export{v as diagram};
