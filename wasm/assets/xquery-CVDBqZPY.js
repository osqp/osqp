var h=function(){function e(l){return{type:l,style:"keyword"}}for(var t=e("operator"),n={type:"atom",style:"atom"},p={type:"axis_specifier",style:"qualifier"},i={",":{type:"punctuation",style:null}},c=["after","all","allowing","ancestor","ancestor-or-self","any","array","as","ascending","at","attribute","base-uri","before","boundary-space","by","case","cast","castable","catch","child","collation","comment","construction","contains","content","context","copy","copy-namespaces","count","decimal-format","declare","default","delete","descendant","descendant-or-self","descending","diacritics","different","distance","document","document-node","element","else","empty","empty-sequence","encoding","end","entire","every","exactly","except","external","first","following","following-sibling","for","from","ftand","ftnot","ft-option","ftor","function","fuzzy","greatest","group","if","import","in","inherit","insensitive","insert","instance","intersect","into","invoke","is","item","language","last","lax","least","let","levels","lowercase","map","modify","module","most","namespace","next","no","node","nodes","no-inherit","no-preserve","not","occurs","of","only","option","order","ordered","ordering","paragraph","paragraphs","parent","phrase","preceding","preceding-sibling","preserve","previous","processing-instruction","relationship","rename","replace","return","revalidation","same","satisfies","schema","schema-attribute","schema-element","score","self","sensitive","sentence","sentences","sequence","skip","sliding","some","stable","start","stemming","stop","strict","strip","switch","text","then","thesaurus","times","to","transform","treat","try","tumbling","type","typeswitch","union","unordered","update","updating","uppercase","using","validate","value","variable","version","weight","when","where","wildcards","window","with","without","word","words","xquery"],r=0,s=c.length;r<s;r++)i[c[r]]=e(c[r]);var a=["xs:anyAtomicType","xs:anySimpleType","xs:anyType","xs:anyURI","xs:base64Binary","xs:boolean","xs:byte","xs:date","xs:dateTime","xs:dateTimeStamp","xs:dayTimeDuration","xs:decimal","xs:double","xs:duration","xs:ENTITIES","xs:ENTITY","xs:float","xs:gDay","xs:gMonth","xs:gMonthDay","xs:gYear","xs:gYearMonth","xs:hexBinary","xs:ID","xs:IDREF","xs:IDREFS","xs:int","xs:integer","xs:item","xs:java","xs:language","xs:long","xs:Name","xs:NCName","xs:negativeInteger","xs:NMTOKEN","xs:NMTOKENS","xs:nonNegativeInteger","xs:nonPositiveInteger","xs:normalizedString","xs:NOTATION","xs:numeric","xs:positiveInteger","xs:precisionDecimal","xs:QName","xs:short","xs:string","xs:time","xs:token","xs:unsignedByte","xs:unsignedInt","xs:unsignedLong","xs:unsignedShort","xs:untyped","xs:untypedAtomic","xs:yearMonthDuration"];for(r=0,s=a.length;r<s;r++)i[a[r]]=n;var x=["eq","ne","lt","le","gt","ge",":=","=",">",">=","<","<=",".","|","?","and","or","div","idiv","mod","*","/","+","-"];for(r=0,s=x.length;r<s;r++)i[x[r]]=t;var g=["self::","attribute::","child::","descendant::","descendant-or-self::","parent::","ancestor::","ancestor-or-self::","following::","preceding::","following-sibling::","preceding-sibling::"];for(r=0,s=g.length;r<s;r++)i[g[r]]=p;return i}();function f(e,t,n){return t.tokenize=n,n(e,t)}function u(e,t){var n=e.next(),p=!1,i=function(l){return l.current()==='"'?l.match(/^[^\"]+\"\:/,!1):l.current()==="'"&&l.match(/^[^\"]+\'\:/,!1)}(e);if(n=="<"){if(e.match("!--",!0))return f(e,t,S);if(e.match("![CDATA",!1))return t.tokenize=D,"tag";if(e.match("?",!1))return f(e,t,E);var c=e.eat("/");e.eatSpace();for(var r,s="";r=e.eat(/[^\s\u00a0=<>\"\'\/?]/);)s+=r;return f(e,t,function(l,T){return function(d,y){return d.eatSpace(),T&&d.eat(">")?(o(y),y.tokenize=u,"tag"):(d.eat("/")||m(y,{type:"tag",name:l,tokenize:u}),d.eat(">")?(y.tokenize=u,"tag"):(y.tokenize=k,"tag"))}}(s,c))}if(n=="{")return m(t,{type:"codeblock"}),null;if(n=="}")return o(t),null;if(z(t))return n==">"?"tag":n=="/"&&e.eat(">")?(o(t),"tag"):"variable";if(/\d/.test(n))return e.match(/^\d*(?:\.\d*)?(?:E[+\-]?\d+)?/),"atom";if(n==="("&&e.eat(":"))return m(t,{type:"comment"}),f(e,t,I);if(i||n!=='"'&&n!=="'"){if(n==="$")return f(e,t,N);if(n===":"&&e.eat("="))return"keyword";if(n==="(")return m(t,{type:"paren"}),null;if(n===")")return o(t),null;if(n==="[")return m(t,{type:"bracket"}),null;if(n==="]")return o(t),null;var a=h.propertyIsEnumerable(n)&&h[n];if(i&&n==='"')for(;e.next()!=='"';);if(i&&n==="'")for(;e.next()!=="'";);a||e.eatWhile(/[\w\$_-]/);var x=e.eat(":");!e.eat(":")&&x&&e.eatWhile(/[\w\$_-]/),e.match(/^[ \t]*\(/,!1)&&(p=!0);var g=e.current();return a=h.propertyIsEnumerable(g)&&h[g],p&&!a&&(a={type:"function_call",style:"def"}),function(l){return b(l,"xmlconstructor")}(t)?(o(t),"variable"):(g!="element"&&g!="attribute"&&a.type!="axis_specifier"||m(t,{type:"xmlconstructor"}),a?a.style:"variable")}return w(e,t,n)}function I(e,t){for(var n,p=!1,i=!1,c=0;n=e.next();){if(n==")"&&p){if(!(c>0)){o(t);break}c--}else n==":"&&i&&c++;p=n==":",i=n=="("}return"comment"}function w(e,t,n,p){let i=function(c,r){return function(s,a){for(var x;x=s.next();){if(x==c){o(a),r&&(a.tokenize=r);break}if(s.match("{",!1)&&v(a))return m(a,{type:"codeblock"}),a.tokenize=u,"string"}return"string"}}(n,p);return m(t,{type:"string",name:n,tokenize:i}),f(e,t,i)}function N(e,t){var n=/[\w\$_-]/;if(e.eat('"')){for(;e.next()!=='"';);e.eat(":")}else e.eatWhile(n),e.match(":=",!1)||e.eat(":");return e.eatWhile(n),t.tokenize=u,"variable"}function k(e,t){var n=e.next();return n=="/"&&e.eat(">")?(v(t)&&o(t),z(t)&&o(t),"tag"):n==">"?(v(t)&&o(t),"tag"):n=="="?null:n=='"'||n=="'"?w(e,t,n,k):(v(t)||m(t,{type:"attribute",tokenize:k}),e.eat(/[a-zA-Z_:]/),e.eatWhile(/[-a-zA-Z0-9_:.]/),e.eatSpace(),(e.match(">",!1)||e.match("/",!1))&&(o(t),t.tokenize=u),"attribute")}function S(e,t){for(var n;n=e.next();)if(n=="-"&&e.match("->",!0))return t.tokenize=u,"comment"}function D(e,t){for(var n;n=e.next();)if(n=="]"&&e.match("]",!0))return t.tokenize=u,"comment"}function E(e,t){for(var n;n=e.next();)if(n=="?"&&e.match(">",!0))return t.tokenize=u,"processingInstruction"}function z(e){return b(e,"tag")}function v(e){return b(e,"attribute")}function b(e,t){return e.stack.length&&e.stack[e.stack.length-1].type==t}function m(e,t){e.stack.push(t)}function o(e){e.stack.pop();var t=e.stack.length&&e.stack[e.stack.length-1].tokenize;e.tokenize=t||u}const _={name:"xquery",startState:function(){return{tokenize:u,cc:[],stack:[]}},token:function(e,t){return e.eatSpace()?null:t.tokenize(e,t)},languageData:{commentTokens:{block:{open:"(:",close:":)"}}}};export{_ as xQuery};
