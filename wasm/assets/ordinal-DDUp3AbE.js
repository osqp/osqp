import{i as d}from"./init-DLRA0X12.js";class c extends Map{constructor(t,n=h){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:n}}),t!=null)for(const[r,s]of t)this.set(r,s)}get(t){return super.get(o(this,t))}has(t){return super.has(o(this,t))}set(t,n){return super.set(l(this,t),n)}delete(t){return super.delete(f(this,t))}}class g extends Set{constructor(t,n=h){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:n}}),t!=null)for(const r of t)this.add(r)}has(t){return super.has(o(this,t))}add(t){return super.add(l(this,t))}delete(t){return super.delete(f(this,t))}}function o({_intern:e,_key:t},n){const r=t(n);return e.has(r)?e.get(r):n}function l({_intern:e,_key:t},n){const r=t(n);return e.has(r)?e.get(r):(e.set(r,n),n)}function f({_intern:e,_key:t},n){const r=t(n);return e.has(r)&&(n=e.get(r),e.delete(r)),n}function h(e){return e!==null&&typeof e=="object"?e.valueOf():e}const a=Symbol("implicit");function p(){var e=new c,t=[],n=[],r=a;function s(u){let i=e.get(u);if(i===void 0){if(r!==a)return r;e.set(u,i=t.push(u)-1)}return n[i%n.length]}return s.domain=function(u){if(!arguments.length)return t.slice();t=[],e=new c;for(const i of u)e.has(i)||e.set(i,t.push(i)-1);return s},s.range=function(u){return arguments.length?(n=Array.from(u),s):n.slice()},s.unknown=function(u){return arguments.length?(r=u,s):r},s.copy=function(){return p(t,n).unknown(r)},d.apply(s,arguments),s}export{g as I,a as i,p as o};
